name: Create ARM node (REUSABLE)

on:
  workflow_call:
    outputs:
      id:
        description: "ARM ID"
        value: ${{ jobs.build.outputs.id }}
      ip:
        description: "ARM IP"
        value: ${{ jobs.build.outputs.ip }}

    secrets:
      SCW_ACCESS_KEY:
        required: true
      SCW_SECRET_KEY:
        required: true
      SCW_DEFAULT_PROJECT_ID:
        required: true
      SCW_DEFAULT_ORGANIZATION_ID:
        required: true
      ARM_SSH_KEY:
        required: true
      ARM_SSH_CONFIG:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.scw.outputs.json }}
      id: ${{ steps.getinfo.outputs.id }}
      ip: ${{ steps.getinfo.outputs.ip }}
    steps:
      # Prepare
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Create ARM VM
        id: scw
        uses: scaleway/action-scw@bbcfd65cd2af73456ce439088e0d42c1657c4c38
        with:
          args: instance server create zone=fr-par-2 type=AMP2-C48 root-volume=block:50GB
          save-config: true
          version: v2.13.0
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          default-project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          default-organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
      - name: Get info
        id: getinfo
        run: |
          echo "id=${{ fromJson(steps.scw.outputs.json).id }}" >> "$GITHUB_OUTPUT"
          echo "ip=${{ fromJson(steps.scw.outputs.json).public_ip.address }}" >> "$GITHUB_OUTPUT"
      - name: Wait for VM
        run: scw instance server wait ${{ fromJson(steps.scw.outputs.json).ID }} zone=fr-par-2
      - name: Wait for SSH
        uses: iFaxity/wait-on-action@628831cec646e6dacca502f34a6c6b46e131e51d
        with:
          resource: tcp:${{ fromJson(steps.scw.outputs.json).public_ip.address }}:22
          timeout: 300000
      - name: Setup SSH for ARM node
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa_arm
          chmod 600 ~/.ssh/id_rsa_arm
          echo "$SSH_CONFIG" | sed "s/SSH_IP/$SSH_IP/g" > ~/.ssh/config
        env:
          SSH_KEY: ${{ secrets.ARM_SSH_KEY }}
          SSH_IP: ${{ fromJson(steps.scw.outputs.json).public_ip.address }}
          SSH_CONFIG: ${{ secrets.ARM_SSH_CONFIG }}
      - name: Install Docker
        run: ssh root@$SSH_IP "curl -fsSL https://test.docker.com -o test-docker.sh ; sh test-docker.sh"
        env:
          SSH_IP: ${{ fromJson(steps.scw.outputs.json).public_ip.address }}

